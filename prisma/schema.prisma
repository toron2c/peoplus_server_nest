generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [pgcrypto]
}

model User {
  id       String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email    String @unique
  password String
  // Post     Post[]
  // profile  Profile?
  // Table    Table[]
  // Comments Comments[]
}

// model Profile {
//   id       Int      @id @default(autoincrement())
//   bio      String
//   birthday DateTime
//   userId   Int      @unique
//   user     User     @relation(fields: [userId], references: [id])
// }

// model Post {
//   id        Int        @id @default(autoincrement())
//   createdAt DateTime   @default(now())
//   updatedAt DateTime   @updatedAt
//   title     String
//   published Boolean    @default(false)
//   authorId  Int
//   author    User       @relation(fields: [authorId], references: [id])
//   comments  Comments[]
// }

// model Comments {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   Post      Post?    @relation(fields: [postId], references: [id])
//   postId    Int?
//   authorId  Int
//   author    User     @relation(fields: [authorId], references: [id])
//   message   String
// }

// model Table {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   User      User?    @relation(fields: [userId], references: [id])
//   userId    Int
//   style     Style?
// }

// model Style {
//   id      Int    @id @default(autoincrement())
//   styles  String
//   tableId Int    @unique
//   table   Table  @relation(fields: [tableId], references: [id])
// }
